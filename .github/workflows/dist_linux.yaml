name: Build on Linux
on: push

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Nim
        run: |
          cd $HOME &&
          curl -O https://nim-lang.org/download/nim-2.0.2-linux_x64.tar.xz &&
          tar xf nim-2.0.2-linux_x64.tar.xz
      - name: Install Nim and build deps
        run: |
          sudo apt-get update
          sudo apt-get install build-essential scons pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev
      - name: Update path
        run: echo "$HOME/.nimble/bin:$HOME/nim-2.0.2/bin" >> $GITHUB_PATH
      - name: Install nimble deps
        run: nimble setup -y
      - name: Save SHAs of submodules
        run: 'git submodule status > .submodules.tmp'
      - name: Prep dist config
        run: cp dist_config.example.json dist_config.json
      - name: prereq cache
        id: prereq-cache
        uses: actions/cache@v3
        with:
          path: |
            vendor/godot/bin
            fonts
          key: ${{ runner.os }}-prereq-cache-v3-${{ hashFiles('.submodules.tmp') }}
      - name: build prereqs
        run: nimble dist_prereqs
        if: steps.prereq-cache.outputs.cache-hit != 'true'
      - name: Dist
        run: nimble dist_package
      - uses: actions/upload-artifact@v3
        with:
          name: Enu Linux Distribution
          path: |
            dist/enu-*.tar.gz
            dist/enu-*.AppImage
